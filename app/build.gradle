apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.duy.c.cpp.compiler"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 9
        versionName "1.0.9"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    flavorDimensions "cpuArch"
    productFlavors {
        arch_x86 {
            dimension 'cpuArch'
            versionNameSuffix "-x86"
            versionCode 1
            ndk.abiFilter "x86"
        }
        arch_arm7 {
            dimension 'cpuArch'
            versionNameSuffix "-armeabi-v7a"
            versionCode 2
            ndk.abiFilter "armeabi-v7a"
        }
    }
    sourceSets {
        main {
            res.srcDirs += 'src/main/res-terminal'
            res.srcDirs += 'src/main/res-cctools'
        }
    }

    signingConfigs {
        release {
            def propFile = new File("signing.properties")
            if (propFile.exists()) {
                Properties props = new Properties()
                props.load(new FileInputStream(propFile))
                storeFile new File(props["RELEASE_STORE_FILE"])
                storePassword props["RELEASE_STORE_PASSWORD"]
                keyAlias props["RELEASE_KEY_ALIAS"]
                keyPassword props["RELEASE_KEY_PASSWORD"]
            }
        }
    }

    // Map for the version code that gives each ABI a value.
    applicationVariants.all { variant ->
        Properties props = new Properties()
        def propFile = new File("app/signing.properties")
        if (propFile.exists()) {
            props.load(new FileInputStream(propFile))
            buildConfigField "String", "BASE64_KEY", "\"" + props['BASE64_KEY'] + "\""
            buildConfigField "String", "SKU_PREMIUM", "\"" + props['SKU_PREMIUM'] + "\""
        } else {
            buildConfigField "String", "BASE64_KEY", "\"\""
            buildConfigField "String", "SKU_PREMIUM", "\"\""
        }


        variant.outputs.each { output ->
            // get the version code of each flavor
            def abiVersion = variant.versionCode
            output.versionCodeOverride = abiVersion * 100000 + defaultConfig.versionCode
            println " output.versionCodeOverride " + output.versionCodeOverride
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude '.readme'
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}


dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    implementation 'com.android.support:multidex:1.0.3'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.github.afollestad.material-dialogs:commons:0.8.5.8'
    implementation 'com.rengwuxian.materialedittext:library:2.0.3'

    implementation 'org.apmem.tools:layouts:1.10@aar'
    implementation 'com.makeramen:roundedimageview:2.2.1'
    implementation 'com.yqritc:recyclerview-flexibledivider:1.2.9'

    api project(':editor-view')
    api project(':apkbuilder')
    api project(':emulatorview')
    api project(':libtermexec')
    api project(':style')

    implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-storage:15.0.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.2'

}


apply plugin: 'com.google.gms.google-services'
